<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="web.shop.proj.cartMapper">

<!-- 	<select id="getCartList" parameterType="web.shop.proj.form.CartForm" resultType="web.shop.proj.dto.CartDto">
		SELECT product_id, name, price, amount, product_url, sum_price
		FROM shopdb.cart
	</select>
-->
	<insert id="insertCart" parameterType="web.shop.proj.dto.CartDto" useGeneratedKeys="true" keyProperty="cart_id">
        INSERT INTO shopdb.cart(mem_id, product_id, amount)
        VALUES(#{mem_id},#{product_id},#{amount})    
    </insert>
    <select id="listCart" resultType="web.shop.proj.dto.CartDto">
    	select p.product_name, p.price, c.amount, (p.price*c.amount) money,cart_id, product_url
        <!-- 장바구니의 번호, 상품 번호, 회원번호, 회원이름, 상품이름, 상품의양, 상품1개의 가격, 상품의 전체가격을 검색한다.-->
        <!--양쪽 테이블에 다 있는 속성이면 어떤 테이블의 속성인지 정확히 표기해주어야 한다.-->        
        from member m, cart c, product p
        <!-- 회원테이블과, 장바구니 테이블과, 상품테이블로 부터 -->        
        where m.mem_id=c.mem_id and c.product_id=p.product_id and c.mem_id=#{mem_id}
        <!--회원테이블의 회원id와 장바구니테이블의 회원id가 같고, 장바구니의 상품id와 상품테이블의 상품id가 같고, 장바구니테이블의 회원id가 
        	 장바구니에 저장되있는 회원id와 같을때-->
        <!-- 장바구니에 관한 정보를 담은 sql문이다. -->
    </select>
    <select id="sumMoney" resultType="int">
    	<!-- nvl->COALESCE 로 바꾸어줌(mysql용) -->
    	select COALESCE(sum(price*amount),0) sumMoney
        <!--금액과 상품갯수를 곱한값과 0을더해서 0이 나오는 것을 검색한다. -->
        <!--그러니까 아무것도 담지 않았을때를 확인하는 것이다. -->
        <!--빈값이 null이면 안되기 때문에 대체값으로 0이 출력되게끔 만들었다-->

        from cart c,product p
        <!-- 장바구니 테이블과 상품 테이블로 부터 -->

        where c.product_id=p.product_id and mem_id=#{mem_id}
        <!--조건 : 장바구니테이블의 상품 id가 상품테이블의 상품 id와 같고, 요청하는 회원의 id와 같은 경우 -->
    </select>
    
    <!-- 장바구니에 목록이 있는지 확인 -->
    <select id="checkCart" resultType="int">
    	select exists(
			SELECT * 
			FROM shopdb.cart
			where mem_id=#{mem_id} and product_id=#{product_id}
     		)
    </select>
    
    <!-- 장바구니에 목록이 있으면 업데이트 -->
    <select id="updateCart" resultType="int">
    	UPDATE shopdb.cart
		SET amount = amount+#{amount}
		WHERE mem_id=#{mem_id} and product_id=#{product_id}
    </select>
    <!-- 장바구니 삭제 -->
    <delete id="deleteCart">
    	DELETE from cart
    	WHERE cart_id = #{cart_id}
    </delete>
    <!-- 주문완료 - 장바구니 모두삭제 -->
    <delete id="deleteCartAll">
    	DELETE from cart
    	WHERE mem_id = #{mem_id}    	
    </delete>
    
</mapper>